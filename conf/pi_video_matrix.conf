# This is the configuration file for the displaycameras service intended to
# play a series of camera feeds from Ubiquity camera systems.
# This file sets the global options for the service, but the camera names,
# feeds, display windows, display window names, and rotation are set in the
# display layout files, /etc/displaycameras/layout.conf.default (required)
# and any /etc/displaycameras/layout.conf.<display resolution> you want to support
# when you enable displaydetect in this file.  See the commented layout section
# below for examples to use in the layout files.

#### Global Options ####

# Do we need screen blanking before displaying cameras (default false)
#blank="true"

# Optimize reliability by tweaking omx_timeout and/or sleep factor.

# omxplayer network timeout (for establishing feed playback) in seconds.
# I recommend this be no less than 15 seconds and that you increase it as you add
# more than six low-res or four mid-res feeds or add network hops or bandwidth
# restrictions to playing the feeds.
# Default = 30
omx_timeout=

# Number of seconds we allow per camera when starting|restarting|repairing.
# Recommend no less than 3 startsleep and 1 feedsleep.  You may increase this
# when running higher-res feeds, a large number of cameras, or over slow
# network links.
startsleep=3
feedsleep=1
# Retry is how many seconds of sleep that the script waits after the start or feed
# sleep for omxplayer to first report playback, then playback beyond zero seconds.
retry=5

# Enable display detection (disabled by default) if you setup layout configuration
# files of the naming convention 'layout.conf.<display mode>' (e.g.
# layout.conf.1280x1024).  These files should include window names,
# window positions, camera names, camera feeds, and rotation configuration.
#displaydetect=true

# When rotating camera feeds across a display, how many seconds does each rotation last
# Default = 5
rotatedelay=

# How many camera feeds do you want on screen at once, Please take into account
# the Raspberry Pi model, and it's available processing power and GPU memory split.
# Sensible numbers for this are 1,4,6,9 in order to avoid empty spaces.
# Default = 1
on_screen=9