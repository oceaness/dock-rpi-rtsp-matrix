#!/bin/bash

conf_dir=/etc/pi_video_matrix
conf_file="$conf_dir"/default.layout.conf
feeds_file="$conf_dir"/feeds.conf

# Get current screen width and height
display_width=$(cut -d, -f1 /sys/class/graphics/fb0/virtual_size)
display_height=$(cut -d, -f2 /sys/class/graphics/fb0/virtual_size)

# Determine optimum grid
if [ "$1" -ge 2 ] && [ "$1" -le 4 ]; then
	columns=2
	rows=2
elif [ "$1" -ge 5 ] && [ "$1" -le 6 ]; then
	columns=3
	rows=2
elif [ "$1" -gt 6 ]; then
	columns=3
	rows=3
else
	columns=1
	rows=1
fi

# Calculate Column widths and Row heights
column_width=$((display_width/columns))
row_height=$((display_height/rows))

# Sanitise and count number of feeds
printf '\n' >> "$feeds_file"
sed -i '/^\s*$/d' "$feeds_file"
feeds=$(wc -l < "$feeds_file")
offscreen=$((feeds-columns*rows))

# Build matrix cordinates for on-screen feeeds
for row in $(seq 1 $rows)
do
	y1=$((row_height*(row-1)))
	y2=$((row_height*row))
	for col in $(seq 1 $columns)
	do
		x1=$((column_width*(col-1)))
		x2=$((column_width*col))
		window_positions="$window_positions\"$x1 $y1 $x2 $y2\" \\"$'\n'
		windows="${windows}r${row}_c$col "
	done
done

# Add matrix cordinates for off-screen feeeds
for i in $(seq 1 $offscreen)
do
	x1=0
	y1=$display_height
	x2=$column_width
	y2=$((y1+row_height))
	window_positions="$window_positions\"$x1 $y1 $x2 $y2\" \\"$'\n'
	windows="${windows}off_$i "
done

# Create formatted list of feeds from $feeds_file
while read -r line
do
	line=$(echo "$line" | tr -d '\r')
	camera_feeds="$camera_feeds\"$line\" \\"$'\n'
done < "$feeds_file"

# If there are more feeds than windows in the matrix enable feed rotation
if [ "$feeds" -gt "$1" ]; then
	rotate="true"
else
	rotate="false"
fi

cat <<EOF > $conf_file
# This conf file is automatically generated by pi_video_matrix.
# Any modifications will be overwritten upon restart.

windows=($windows)
window_positions=(
$window_positions)
camera_names=($windows)
camera_feeds=(
$camera_feeds)
rotate=$rotate
EOF
