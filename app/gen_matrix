#!/bin/bash

conf_dir=/etc/pi_video_matrix
conf_file="$conf_dir"/default.layout.conf
feeds_file="$conf_dir"/feeds.conf

# Get current screen width and height
actual_display_width=$(cut -d, -f1 /sys/class/graphics/fb0/virtual_size)
actual_display_height=$(cut -d, -f2 /sys/class/graphics/fb0/virtual_size)

# Determine optimum grid
if [ "$1" -ge 2 ] && [ "$1" -le 4 ]; then
	columns=2
	rows=2
elif [ "$1" -ge 5 ] && [ "$1" -le 6 ]; then
	large=true
	columns=3
	rows=3
elif [ "$1" -ge 7 ]; then
	columns=3
	rows=3
else
	columns=1
	rows=1
fi

# If stretch not true adjust display height or width to maintain 16:9 aspect ratio.
# This should only matter on screens that are not 16:9.
if [ ! "$2" = "true" ]; then
	if [ $((actual_display_width*rows*9/(columns*16))) -le "$actual_display_height" ]; then
		display_height=$((actual_display_width*rows*9/(columns*16)))
		display_width="$actual_display_width"
	elif [ $((actual_display_height*columns*16/(rows*9))) -le "$actual_display_width" ]; then
		display_width=$((actual_display_height*columns*16/(rows*9)))
		display_height="$actual_display_height"
	fi
else
	display_height="$actual_display_height"
	display_width="$actual_display_width"
fi

# Calculate column widths and row heights
column_width=$((display_width/columns))
row_height=$((display_height/rows))

# Build matrix coordinates for on-screen windows
for row in $(seq 1 $rows); do
	for col in $(seq 1 $columns); do
		y1=$((row_height*(row-1)))
		y2=$((row_height*row))
		x1=$((column_width*(col-1)))
		x2=$((column_width*col))
		if [ "$large" = "true" ]; then
			if [ "$row" = 1 ] && [ "$col" = 1 ]; then
				y2=$((y2*2))
				x2=$((x2*2))
			elif [ "$row" = 1 ] && [ "$col" = 2 ]; then
				unset y1 y2 x1 x2
			elif [ "$row" = 2 ] && [ "$col" = 1 ]; then
				unset y1 y2 x1 x2
			elif [ "$row" = 2 ] && [ "$col" = 2 ]; then
				unset y1 y2 x1 x2
			fi
		fi
		if [ -n "$x1" ] && [ -n "$y1" ] && [ -n "$x2" ] && [ -n "$y2" ]; then
			window_positions="$window_positions\"$x1 $y1 $x2 $y2\" \\"$'\n'
			windows="${windows}r${row}_c$col "
		fi
	done
done

# Remove comments, then empty lines, and count number of feeds
# Calculate number of offscreen windows required
feeds=$(sed -e 's/#.*//' -e '/^$/d' "$feeds_file" | wc -l)
offscreen=$((feeds-columns*rows))

# Add matrix coordinates for off-screen windows
for i in $(seq 1 $offscreen); do
	x1=0
	y1=$actual_display_height
	x2=$column_width
	y2=$((y1+row_height))
	window_positions="$window_positions\"$x1 $y1 $x2 $y2\" \\"$'\n'
	windows="${windows}off_$i "
done

# If there are offscreen windows in the matrix enable feed rotation
if [ $offscreen -ge 1 ]; then
	rotate="true"
else
	rotate="false"
fi

cat <<EOF > $conf_file
# This conf file is automatically generated by pi_video_matrix.
# Any modifications will be overwritten upon restart.

windows=($windows)
window_positions=(
$window_positions)
camera_names=($windows)
rotate=$rotate
EOF
